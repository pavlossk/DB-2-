апка еяытглата

еяытгла 1О

set serveroutput on;
DECLARE 
CURSOR exe1 IS SELECT AREA FROM COUNTRY WHERE COUNTRY.NAME='Greece';
area1 COUNTRY.AREA%type;
CURSOR exe2 IS SELECT NAME,POPULATION,AREA FROM COUNTRY WHERE  COUNTRY.AREA < area1 + area1*0.05 AND COUNTRY. AREA > area1 - area1*0.05;
name COUNTRY.NAME%type;
pop COUNTRY.POPULATION%type;
area2 COUNTRY.AREA%type;
BEGIN
OPEN exe1;
LOOP
FETCH exe1 into area1;
dbms_output.put_line(area1);
EXIT WHEN exe1%notfound OR exe1%rowcount=1 ;
END LOOP;
CLOSE exe1;
OPEN exe2;
LOOP
FETCH exe2 into name,pop,area2;
EXIT WHEN exe2%notfound;
dbms_output.put_line(name||' '||pop||' '||area2);
END LOOP;
CLOSE exe2;
END;



еяытгла 3О

create or replace 
PROCEDURE SIMPLE3 (n1 IN VARCHAR2,c OUT SYS_REFCURSOR)
AS
BEGIN
OPEN c FOR SELECT DISTINCT(GEO_RIVER.RIVER) FROM GEO_RIVER,COUNTRY WHERE n1=COUNTRY.NAME AND COUNTRY.CODE=GEO_RIVER.COUNTRY;
END SIMPLE3;


еяытгла 5О

set serveroutput on;
SELECT NAME,AREA,e1.coordinates.latitude,e1.coordinates.longitude FROM ISLAND e1 WHERE ISLANDS='Ionic Islands';



еяытгла 7О

create or replace 
PROCEDURE SIMPLE7N (k IN INT,c OUT SYS_REFCURSOR) 
AS
BEGIN
OPEN c FOR SELECT * FROM (SELECT NAME,POPULATION FROM COUNTRY ORDER BY POPULATION  DESC) WHERE ROWNUM <=k;
END SIMPLE7N;



еяытгла 9О

SELECT CITY.LATITUDE,CITY.LONGITUDE,CITY.NAME,COUNTRY.CAPITAL FROM CITY,COUNTRY WHERE CITY.NAME =COUNTRY.NAME;



еяытгла 11О

DECLARE
c2 COUNTRY.CODE%type;
c3 NUMBER;
CURSOR c1 IS  SELECT DISTINCT CITY.COUNTRY,COUNT(CITY.NAME) FROM CITY,COUNTRY WHERE CITY.COUNTRY=COUNTRY.CODE AND CITY.POPULATION>&MILLIONS GROUP BY CITY.COUNTRY;
BEGIN
 OPEN c1;
 dbms_output.put_line('The Countries are:');
 LOOP
 FETCH c1 INTO c2,c3;
 EXIT WHEN  c1%notfound ;
 IF c3>10 THEN
 dbms_output.put_line(c2||' '||c3);
 END IF;
 END LOOP;
 END;



сумхета еяытглата

еяытгла 1О

SELECT COUNTRY.NAME,COUNTRY.POPULATION,COUNTRY.CAPITAL FROM ISMEMBER,COUNTRY  
WHERE ISMEMBER.COUNTRY=COUNTRY.CODE  AND ORGANIZATION='NATO' ORDER BY COUNTRY.POPULATION DESC;



еяытгла 3О
 
SET SERVEROUTPUT ON;
SELECT ENCOMPASSES.CONTINENT,ROUND(AVG(GDP)) FROM ECONOMY,ENCOMPASSES 
WHERE (ENCOMPASSES.CONTINENT='Europe' OR ENCOMPASSES.CONTINENT='Africa')
 AND ECONOMY.COUNTRY=ENCOMPASSES.COUNTRY GROUP BY ENCOMPASSES.CONTINENT;



еяытгла 5О

SELECT COUNTRY.NAME,COUNTRY.POPULATION,POPULATION.POPULATION_GROWTH 
FROM COUNTRY,POPULATION,ENCOMPASSES
WHERE ENCOMPASSES.CONTINENT='&CONTINENT' 
AND POPULATION.POPULATION_GROWTH < '&POPULATION_GROWTH'
AND ENCOMPASSES.COUNTRY=COUNTRY.CODE 
AND POPULATION.COUNTRY=COUNTRY.CODE ;



еяытгла 7О

set serveroutput on;
DECLARE
coun1 COUNTRY.NAME%TYPE;
coun2 COUNTRY.NAME%TYPE;
cap1 CITY.NAME%TYPE;
cap2 COUNTRY.CAPITAL%TYPE;
pop CITY.POPULATION%TYPE;
CURSOR c3 IS SELECT COUNTRY.NAME,CITY.NAME,CITY.POPULATION FROM BORDERS,COUNTRY
INNER JOIN CITY ON CITY.NAME=COUNTRY.CAPITAL  
WHERE(BORDERS.COUNTRY2 = CITY.COUNTRY AND BORDERS.COUNTRY1='&K')
OR  (BORDERS.COUNTRY1 = CITY.COUNTRY AND BORDERS.COUNTRY2='&K');
BEGIN
OPEN c3;
LOOP
FETCH c3 INTO coun1,cap1,pop;
EXIT WHEN c3%notfound;
dbms_output.put_line(coun1||' '||cap1||' '||pop);
END LOOP;
END;



еяытгла 9О

create or replace 
FUNCTION ADVAN9(conti IN VARCHAR2,sea IN VARCHAR2)
RETURN SYS_REFCURSOR
IS
c1 SYS_REFCURSOR;
con  COUNTRY.NAME%TYPE;
num NUMBER;
BEGIN
OPEN c1 FOR SELECT DISTINCT COUNTRY.NAME,COUNT(DISTINCT ORGANIZATION) FROM ISMEMBER,ENCOMPASSES,GEO_SEA,COUNTRY
WHERE ENCOMPASSES.CONTINENT=conti AND GEO_SEA.SEA=sea 
AND ISMEMBER.COUNTRY=ENCOMPASSES.COUNTRY AND GEO_SEA.COUNTRY=ENCOMPASSES.COUNTRY 
AND GEO_SEA.COUNTRY=COUNTRY.CODE  GROUP BY COUNTRY.NAME;
LOOP
FETCH c1 INTO con,num;
EXIT WHEN c1%notfound ;
END LOOP;
RETURN c1;
END ADVAN9;



еяытгла 11О

SELECT  POLITICS.GOVERNMENT,COUNT(POLITICS.COUNTRY) FROM POLITICS,ISMEMBER
WHERE POLITICS.COUNTRY=ISMEMBER.COUNTRY AND ISMEMBER.ORGANIZATION='EU' GROUP BY POLITICS.GOVERNMENT ;



еяытгла 13О

 SELECT DISTINCT (COUNTRY.NAME), GEO_LAKE.LAKE,LAKE.AREA,COUNT(GEO_LAKE.PROVINCE)
FROM COUNTRY,GEO_LAKE,LAKE
WHERE GEO_LAKE.COUNTRY=COUNTRY.CODE AND GEO_LAKE.LAKE=LAKE.NAME
GROUP BY COUNTRY.NAME, GEO_LAKE.LAKE,LAKE.AREA
HAVING COUNT(GEO_LAKE.PROVINCE)>2; 



еяытгла 15О

SELECT C1.NAME,C1.CAPITAL FROM COUNTRY C1,ISMEMBER I1
INNER JOIN ISMEMBER I2 ON I2.COUNTRY = I1.COUNTRY 
WHERE I1.ORGANIZATION='C' AND I2.ORGANIZATION='EU' AND C1.CODE=I1.COUNTRY;



еяытгла 17О

DECLARE
CURSOR f IS SELECT CITY.NAME,CITY.LONGITUDE,CITY.LATITUDE FROM CITY,ENCOMPASSES WHERE ENCOMPASSES.CONTINENT='Europe' AND ENCOMPASSES.COUNTRY=CITY.COUNTRY;
CURSOR s IS SELECT CITY.NAME,CITY.LONGITUDE,CITY.LATITUDE FROM CITY,ENCOMPASSES WHERE ENCOMPASSES.CONTINENT='Europe' AND ENCOMPASSES.COUNTRY=CITY.COUNTRY;
CURSOR c3 IS SELECT DISTINCT (DIST.city1),MIN(SUM(SELECT CAST(DIST.distance AS NUMBER) FROM DIST)) FROM DIST ORDER BY DIST.city1;
c1_name CITY.NAME%TYPE;
c1_long CITY.LONGITUDE%TYPE;
c1_lat CITY.LATITUDE%TYPE;
c2_name CITY.NAME%TYPE;
c2_long CITY.LONGITUDE%TYPE;
c2_lat CITY.LATITUDE%TYPE;
ci DIST.city1%TYPE;
k   long;
m number(38,127);
i long;
BEGIN
OPEN f;
LOOP
FETCH f INTO c1_name,c1_long,c1_lat;
OPEN s;
LOOP
FETCH s INTO c2_name,c2_long,c2_lat;
  m:=0;
  i:=2*ASIN(SQRT(POWER(SIN((c1_lat-c2_lat)/2),2)+COS(c1_lat)*COS(c2_lat)*POWER(SIN((c1_long-c2_long)/2),2)))*6371.01;
   BEGIN
   INSERT INTO DIST(city1,city2,distance) VALUES (c1_name,c2_name,i);
   END;
  dbms_output.put_line(c1_name||' '||c2_name||' '||m);
  EXIT WHEN s%notfound;
  END LOOP;
  CLOSE s;
 
  EXIT WHEN f%notfound;
END LOOP;
CLOSE f;

OPEN c3;
LOOP
FETCH c3 INTO ci,k;
dbms_output.put_line(ci||' '||k);
EXIT WHEN c3%notfound;
END LOOP;
CLOSE c3;
END;


CREATE TABLE dist
(

);
CREATE GLOBAL TEMPORARY TABLE dist
        (city1 VARCHAR2(50) NOT NULL,
city2 VARCHAR2(50)NOT NULL,
distance number(38,38) )
      ON COMMIT DELETE ROWS;